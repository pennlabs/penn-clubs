
# ========================================
# Note:  If you make changes to this CI/CD, please include someone from DevOps in the list of reviewers for the PR.
# ========================================
name: Build and Deploy Clubs

on: push

jobs:
  backend-check:
    name: "Backend Check"
    uses: pennlabs/shared-actions/.github/workflows/django-check.yaml@v0.1
    with:
      projectName: pennclubs
      path: backend
      flake: true
      black: true

  frontend-check:
    name: "Frontend Check"
    uses: pennlabs/shared-actions/.github/workflows/react-check.yaml@v0.1
    with:
      path: frontend

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-build-backend
      - name: Build/Publish
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/penn-clubs-backend:latest
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: pennlabs/penn-clubs-backend:latest,pennlabs/penn-clubs-backend:${{ github.sha }}
          outputs: type=docker,dest=/tmp/image.tar
      - uses: actions/upload-artifact@v2
        with:
          name: build-backend
          path: /tmp/image.tar
    needs: backend-check

  build-frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-build-frontend
      - name: Build/Publish
        uses: docker/build-push-action@v2
        with:
          context: frontend
          file: frontend/Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/penn-clubs-frontend:latest
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: pennlabs/penn-clubs-frontend:latest,pennlabs/penn-clubs-frontend:${{ github.sha }}
          outputs: type=docker,dest=/tmp/image.tar
      - uses: actions/upload-artifact@v2
        with:
          name: build-frontend
          path: /tmp/image.tar
    needs: frontend-check

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - name: Load docker images
        run: |-
          docker load --input build-backend/image.tar
          docker load --input build-frontend/image.tar
      - name: Run docker compose
        run: |-
          mkdir -p /tmp/test-results
          docker-compose -f docker-compose.test.yaml up -d
      - name: Wait for backend
        run: |-
          for try in {1..20}; do
            docker-compose -f docker-compose.test.yaml exec -T backend python manage.py migrate --check && break
            sleep 5
          done
      - name: Populate backend
        run: docker-compose -f docker-compose.test.yaml exec -T backend python manage.py populate
      - name: Run integration tests
        run: docker-compose -f docker-compose.test.yaml exec -T frontend yarn integration
      - name: Delete artifacts when no longer needed
        if: failure() || github.ref != 'refs/heads/master'
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |-
            build-backend
            build-frontend
      - name: Print logs on failure
        if: failure()
        run: docker-compose -f docker-compose.test.yaml logs
      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-output
          path: /tmp/test-results
    env:
      GIT_SHA: ${{ github.sha }}
    needs:
      - build-backend
      - build-frontend

  post-integration-publish:
    name: Publish Images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |-
            build-backend
            build-frontend
      - name: Load docker images
        run: |-
          docker load --input build-backend/image.tar
          docker load --input build-frontend/image.tar
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push docker images
        run: |-
          docker push -a pennlabs/penn-clubs-backend
          docker push -a pennlabs/penn-clubs-frontend
    needs: integration-tests

  deploy:
    name: "Deploy"
    uses: pennlabs/shared-actions/.github/workflows/deployment.yaml@v0.1

    with:
      githubRef: ${{ github.ref }}
      gitSha: ${{ github.sha }}

    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      GH_AWS_ACCESS_KEY_ID: ${{ secrets.GH_AWS_ACCESS_KEY_ID }}
      GH_AWS_SECRET_ACCESS_KEY: ${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}

    needs:
      - post-integration-publish
